{"meta":{"title":"Supertramp","subtitle":"You are being watched.","description":"You're being watched.","author":"supertramp","url":"https://supertramp7.github.io","root":"/"},"pages":[{"title":"CATEGORIES","date":"2022-02-18T16:47:23.329Z","updated":"2022-02-18T16:47:23.329Z","comments":true,"path":"categories/index.html","permalink":"https://supertramp7.github.io/categories/index.html","excerpt":"","text":""},{"title":"TAGS","date":"2022-02-18T16:48:08.443Z","updated":"2022-02-18T16:48:08.443Z","comments":true,"path":"tags/index.html","permalink":"https://supertramp7.github.io/tags/index.html","excerpt":"","text":""},{"title":"MESS","date":"2021-04-30T16:00:00.000Z","updated":"2022-02-18T14:01:47.535Z","comments":true,"path":"daily/index.html","permalink":"https://supertramp7.github.io/daily/index.html","excerpt":"","text":""}],"posts":[{"title":"test","slug":"test","date":"2022-02-17T13:18:34.000Z","updated":"2022-02-17T13:19:30.333Z","comments":true,"path":"test/","link":"","permalink":"https://supertramp7.github.io/test/","excerpt":"test","text":"test ###testtest","categories":[],"tags":[]},{"title":"如何搭建一个自己的博客","slug":"如何搭建一个自己的博客","date":"2022-02-17T05:15:48.602Z","updated":"2022-02-18T16:52:01.854Z","comments":true,"path":"如何搭建一个自己的博客/","link":"","permalink":"https://supertramp7.github.io/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/","excerpt":"引言为什么要搭建自己的个人博客工作和学习过程中，我们经常遇到一些这样或那样的问题，此时我们可能会在网上找到相应的解决方法。但是过了一段时间之后，当我们再次碰到类似的问题时，早已忘记以前是怎么解决的了，于是又要到网上去搜，浪费大量的时间和精力。面对这些重复的问题，我们为什么不能把它们记录下来呢？","text":"引言为什么要搭建自己的个人博客工作和学习过程中，我们经常遇到一些这样或那样的问题，此时我们可能会在网上找到相应的解决方法。但是过了一段时间之后，当我们再次碰到类似的问题时，早已忘记以前是怎么解决的了，于是又要到网上去搜，浪费大量的时间和精力。面对这些重复的问题，我们为什么不能把它们记录下来呢？ 在我看来，搭建自己的个人博客主要有以下好处： 有助于养成归纳总结的习惯，帮助记忆，把别人的知识变成自己的知识。 通过记录自己工作和生活，锻炼自己的写作的能力。 培养开放（开源）意识，与大家一起学习交流，共同进步。 搭建个人博客的多种选择目前，主流的博客主要分静态博客和动态博客两类： 所谓动态，就是指有前端有后端，可以登录到后台进行管理。静态博客是纯前端的展示，没有后端。 1. 动态博客搭建 1）直接在简书、CSDN（最近吐槽的比较多）、知乎、博客园等动态博客公共平台上写。 优点：简单 缺点：别人家的东西限制多 2）使用 WordPress 等成熟框架搭建动态博客 + 服务器部署 优点：相对简单 缺点：笨重 3）使用 Java、PHP、Python 等语言开发属于自己的动态博客 + 服务器部署 优点：功能强大 缺点：麻烦、不易上手 2. 静态博客搭建 1）使用 Hexo、Hugo、jekyll 等主流博客框架搭建静态博客 + 托管在 GitHub、码云等公共平台。 优点：轻量级、易上手、不花钱 缺点：访问速度慢 2）使用 Hexo、Hugo、jekyll 等主流博客框架搭建静态博客 + 云端服务器部署。 优点：有独立的域名、访问速度快、自主可控 缺点：要花钱买域名和云服务器 (我用的就是“Hexo+GitHub”这种方法，接下来详细地给大家介绍一下采用该方法搭建个人博客的原理和步骤。) 什么是 HexoHexo 可以理解为是基于 node.js 制作的一个博客工具。它是一个静态页面生成和上传的工具。 为什么选择 HexoHexo 在本地安装，不需要部署到我们的服务器上。我们只需要在本地通过 markdown 编写文章，然后让 Hexo 帮我们生成静态的 html 页面，并通过 Hexo 将生成的 html 文件上传到我们的服务器。 为什么选择托管在 GitHub 上托管在 github 上方便、不花钱 一、工作原理使用 Hexo 搭建个人博客并托管在 GitHub 的原理：简单来说就是在本地计算机搭建 Hexo 环境，Hexo 通过 generate 命令将*.md 文件渲染成静态的 html 页面，然后 Hexo 通过 deploy 命令触发 git 用户通过公钥免密登陆服务器，进而将静态页面推送到服务器的 git 仓库（repository）中。 二、搭建步骤在本地计算机安装 Hexo 环境1. 安装 Node.js去 Node.js 官网[2]下载 Windows (x64)长期支持版 Long Term Support (LTS) schedule。按提示逐步安装即可，安装完成后打开 cmd 查看版本号验证是否安装成功。 12C:\\Users\\11617&gt;node -vv12.14.1 Node.js 中自带了 npm 包管理工具，在 cmd 中查看 npm 版本。 12C:\\Users\\11617&gt;npm -v6.13.4 2. 安装 Gitgit 是一个版本控制工具，国外镜像下载巨慢，建议前往淘宝 Git for Windows 镜像下载 git 安装包。按提示逐步安装即可，安装完成后右键菜单中出现 Git Bash 和 Git GUI 菜单表明安装成功，如下图所示。 注：git 和 github 是两个东西。github 是基于 git 二次开发的，git 是 github 的核心，git 负责与 github 相关的所有本地工作。 3. 安装 Hexo在 F 盘新建 blog 文件夹用来存放个人博客，进入该文件夹，右键打开 Git Bash，使用 npm 安装 Hexo。 1$ npm install -g hexo-cli Hexo 安装完成后，在 blog 文件夹下新建 myblog 项目，并对其进行初始化。 12$ hexo init myblog$ cd myblog 此时，会在 blog 文件夹下新建 myblog 文件夹，并在其内部生成相应的项目文件。如下图所示： 在 myblog 文件夹下启动 hexo 服务。 1$ hexo s 此时在本地打开浏览器，通过 http://localhost:4000/ 便可访问基于 Hexo 的个人博客主页了。如下图所示： 4. 我的第一篇文章在 myblog 文件夹下，右键打开 Git Bash，新建第一篇文章。 1$ hexo n &quot;我的第一篇博客文章&quot; 运行结果如下： 进入到 myblog/source/_posts/文件夹下。 123$ cd source&#x2F;_posts$ lshello-world.md 我的第一篇博客文章.md 打开“我的第一篇博客文章.md”并编辑保存。 重新退回到 myblog 文件夹下，清除缓存文件 db.json 和已生成的静态文件 public ，生成网站静态文件到默认设置的 public 文件夹，并重新启动 hexo。 1234$ cd ../..$ hexo clean$ hexo g$ hexo s 三、部署 GitHub将博客部署到 GitHub 上1. 登录 GitHub2. 新建仓库 —&gt; new repository 点击 Create repository，进入下一步。 3. 安装 git 插件1$ cnpm install --save hexo-deployer-git 4. 配置_config.yml 文件在 myblog 文件夹下打开_config.yml 文件并编辑保存。 1$ vim _config.yml 编辑如下： 保存退出后重新部署： 1$ hexo d 输入 github 账号、密码后刷新 GitHub 就可以看到博客。 5. 访问博客我的博客 四、更换主题yilila 主题1. 下载主题在 myblog 文件夹下，右键打开 Git Bash，下载主题到 themes 下的 yilia 文件夹下。 1$ git clone https://github.com/litten/hexo-theme-yilia.git themes yilia 2. 配置主题打开_config.yml 修改主题并保存。 3. 成功使用1234$ hexo clean$ hexo g$ hexo s$ hexo d 4. 优化Hexo yilia 主题一揽子优化方案 butterfly 主题1. 下载主题1git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly 2. 配置主题_config.yml 中 1theme：butterfly 3. 安装插件如果没有 pug 以及 stylus 的渲染器，请下载安装： 1npm install hexo-renderer-pug hexo-renderer-stylus --save ERROR1执行命令：git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 出现错误：fatal: unable to access &#39;https://github.com/litten/hexo-theme-yilia.git/&#39;: OpenSSL SSL_read: Connection was reset, errno 10054 原因：因为 git 在拉取或者提交项目时，中间会有 git 的 http 和 https 代理，但是我们本地环境本身就有 SSL 协议了，所以取消 git 的 https 代理即可，不行再取消 http 的代理。 解决方案：取消 git 本身的 https 代理，使用自己本机的代理，如果没有的话，其实默认还是用 git 的。 12345// 取消http代理git config --global --unset http.proxy// 取消https代理git config --global --unset https.proxy ERROR2执行代码：hexo d 出现错误：Logon failed, use ctrl+c to cancel basic credential prompt.remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead. 原因：自从 21 年 8 月 13 后不再支持用户名密码的方式验证了，需要创建个人访问令牌(personal access token)。 解决方案： 1.生成令牌 1）登录 GitHub 官网，点击 Settings 2）点击左侧 Developer settings 3）点击左侧 Personal access tokens 4）点击 Generate new token 5）填写 token 信息 6）点击 Generate token，生成令牌 2.应用令牌 首次推送提示 输入的的 2 次用户名密码，第一次是输入github的登陆用户名和密码；第二次是输入上面截图操作步骤最终填写的 Note（用户名） 和生成的 tokens（密码） ERROR3出现错误：hexo 博客在 yilia 主题下不显示作者名字解决方案：yilia 需要在主题下的_config.yml 加入 author: ,不在 menu:下","categories":[{"name":"博客","slug":"博客","permalink":"https://supertramp7.github.io/categories/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://supertramp7.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://supertramp7.github.io/tags/blog/"},{"name":"github","slug":"github","permalink":"https://supertramp7.github.io/tags/github/"},{"name":"butterfly","slug":"butterfly","permalink":"https://supertramp7.github.io/tags/butterfly/"},{"name":"yilia","slug":"yilia","permalink":"https://supertramp7.github.io/tags/yilia/"}]},{"title":"lala","slug":"demo/lalla","date":"0000-01-01T00:00:00.000Z","updated":"2022-02-18T14:45:15.464Z","comments":true,"path":"demo/lalla/","link":"","permalink":"https://supertramp7.github.io/demo/lalla/","excerpt":"","text":"","categories":[],"tags":[]}],"categories":[{"name":"博客","slug":"博客","permalink":"https://supertramp7.github.io/categories/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://supertramp7.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://supertramp7.github.io/tags/blog/"},{"name":"github","slug":"github","permalink":"https://supertramp7.github.io/tags/github/"},{"name":"butterfly","slug":"butterfly","permalink":"https://supertramp7.github.io/tags/butterfly/"},{"name":"yilia","slug":"yilia","permalink":"https://supertramp7.github.io/tags/yilia/"}]}